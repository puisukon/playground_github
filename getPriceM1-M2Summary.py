
import urllib
from bs4 import BeautifulSoup


############# Method 1 ####################
############# buy when + 3 day , sell when - 3 days ####################
############# Method 1 ####################

stockList = ['BMCL',
'ADVANC',
'KBANK',
'K',
'JAS',
'PTT',
'BECL',
'TKN',
'CPF',
'CPALL',
'IFEC',
'INTUCH',
'DTAC',
'1',
'BDMS',
'SCC',
'PTTGC',
'KTB',
'AOT',
'SCB',
'EPG',
'BBL',
'ASEFA',
'ITD',
'MINT',
'PTTEP',
'TASCO',
'BH',
'TU',
'TOP',
'TACC',
'BANPU',
'TWPC',
'AMATAV',
'IRPC',
'TIPCO',
'SAWAD',
'VIBHA',
'TPIPL',
'MTLS',
'BTS',
'CPN',
'TCAP',
'SCI',
'GLOW',
'S',
'CSS',
'BEAUTY',
'DELTA',
'AUCT',
'CK',
'IVL',
'SAPPE',
'AAV',
'KTC',
'SUPER',
'EFORL',
'TMB',
'BA',
'RATCH',
'MAJOR',
'PRAKIT',
'BCP',
'HMPRO',
'WHA',
'SPRC',
'BEC',
'LH',
'RP',
'BCH',
'THCOM',
'AJD',
'KCE',
'SAMART',
'J',
'CENTEL',
'WICE',
'TTW',
'QH',
'GEL',
'ASIMAR',
'UNIQ',
'SIRI',
'ICHI',
'PS',
'DEMCO',
'CHG',
'TAPAC',
'HFT',
'HANA',
'BLA',
'GUNKUL',
'LIT',
'STPI',
'LPN',
'STEC',
'NUSA',
'EA',
'EARTH',
'CPR',
'SCCC',
'COM7',
'KKP',
'BLAND',
'BIGC',
'ROBINS',
'EGCO',
'DCORP',
'PLANB',
'PTG',
'SMPC',
'GPSC',
'VGI',
'TTCL',
'SPALI',
'TTA',
'TVO',
'SPCG',
'PK',
'ERW',
'DCC',
'VNG',
'BTC',
'LPH',
'THANI',
'FSMART',
'THAI',
'TNP',
'BJCHI',
'TNH',
'SCN',
'TRC',
'GL',
'UWC',
'TH',
'TISCO',
'WIIK',
'AP',
'CCET',
'M',
'SVI',
'CKP',
'INET',
'EMC',
'NCL',
'BIG',
'GLOBAL',
'MBK',
'RS',
'FORTH',
'SR',
'BRR',
'STA',
'APCS',
'LHBANK',
'AMATA',
'BAFS',
'TICON',
'ABICO',
'ESSO',
'JWD',
'TPAC',
'ANAN',
'MONO',
'BR',
'VIH',
'TSE',
'WORK',
'NWR',
'RML',
'MCS',
'IMPACT',
'THE',
'KAMART',
'TVT',
'BAY',
'SGP',
'SAMTEL',
'JSP',
'TPCH',
'SYNEX',
'SF',
'PLAT',
'PIMO',
'KC',
'BWG',
'ASK',
'IEC',
'NDR',
'UV',
'TPA',
'BJC',
'MILL',
'CBG',
'VTE',
'EPCO',
'SENA',
'ILINK',
'SYNTEC',
'SAT',
'NYT',
'JMART',
'SEAFCO',
'SC',
'ASP',
'PICO',
'PAE',
'TT',
'CGD',
'RCI',
'AKR',
'CI',
'TOG',
'KGI',
'ROJNA',
'MEGA',
'TLUXE',
'ACAP',
'NTV',
'SMT',
'PYLON',
'SWC',
'UPA',
'U',
'THREL',
'THRE',
'T',
'SOLAR',
'CHO',
'ARROW',
'CEN',
'DNA',
'ATP30',
'TIP',
'MC',
'EASTW',
'DIMET',
'BKD',
'AIT',
'TFG',
'BROOK',
'S11',
'TKS',
'PSTC',
'KOOL',
'CMR',
'MK',
'CWT',
'SPORT',
'GOLD',
'ABC',
'CHOW',
'ECF',
'SIS',
'TWZ',
'GFPT',
'NOK',
'JTS',
'KIAT',
'FER',
'TGPRO',
'KKC',
'RICH',
'ORI',
'TCMC',
'TFD',
'PDI',
'AEONTS',
'WHART',
'TAKUNI',
'PREB',
'MFEC',
'PRIN',
'MAKRO',
'PF',
'TSR',
'SPA',
'MAX',
'GRAND',
'DCON',
'UBIS',
'PACE',
'TAE',
'MODERN',
'SAMCO',
'GENCO',
'TSF',
'DAII',
'SEAOIL',
'PSL',
'HEMRAJ',
'EVER',
'EIC',
'TCC',
'ESTAR',
'FPI',
'SSI',
'TPOLY',
'MBKET',
'TMC',
'KSL',
'BKI',
'NCH',
'APCO',
'SUTHA',
'MIDA',
'MACO',
'MDX',
'OCEAN',
'IRCP',
'ML',
'DRT',
'SRICHA',
'E',
'SANKO',
'MALEE',
'SITHAI',
'DSGT',
'RPC',
'SIAM',
'NNCL',
'UAC',
'SCP',
'PPP',
'CSL',
'SMG',
'ACD',
'COL',
'MANRIN',
'JMT',
'RWI',
'TK',
'AGE',
'SINGER',
'PLE',
'CRANE',
'EE',
'GCAP',
'HPT',
'SNP',
'ACC',
'SUSCO',
'APURE',
'CIG',
'SVOA',
'PT',
'TMT',
'MCOT',
'FNS',
'CGH',
'GC',
'SALEE',
'NPP',
'TCOAT',
'RCL',
'TRUBB',
'MSC',
'SPC',
'NEWS',
'POLAR',
'UKEM',
'LHSC',
'AMATAR',
'IFS',
'GJS',
'PAF',
'SKR',
'PMTA',
'RICHY',
'ASIAN',
'AQUA',
'LOXLEY',
'BSM',
'ECL',
'PRANDA',
'OTO',
'CNT',
'TR',
'XO',
'NEP',
'SIM',
'CTW',
'LHK',
'METCO',
'TSTH',
'SLP',
'AF',
'GSTEL',
'PDG',
'PRINC',
'GRAMMY',
'LEE',
'TNPC',
'CCP',
'HTECH',
'NOBLE',
'LALIN',
'LDC',
'ZMICO',
'KCM',
'QTC',
'KTIS',
'TNITY',
'KBS',
'NMG',
'SMART',
'MTI',
'SNC',
'TC',
'TRU',
'AJ',
'SVH',
'TVD',
'KTP',
'WINNER',
'AIRA',
'VNT',
'SST',
'GYT',
'KYE',
'WAVE',
'CIMBT',
'MBAX',
'PATO',
'AH',
'PM',
'FANCY',
'TNDT',
'BSBM',
'TRT',
'WIN',
'PCSGH',
'MOONG',
'UTP',
'TMILL',
'CCN',
'PTL',
'SAM',
'TSI',
'TCJ',
'AS',
'SIMAT',
'UMI',
'TGCI',
'AEC',
'VPO',
'SORKON',
'TWP',
'PL',
'HYDRO',
'JUBILE',
'SE-ED',
'AYUD',
'OISHI',
'GIFT',
'HTC',
'A',
'UT',
'UMS',
'TCB',
'PE',
'EASON',
'SMK',
'VARO',
'PB',
'FVC',
'UEC',
'CFRESH',
'AMARIN',
'IHL',
'AKP',
'CM',
'SPVI',
'SABINA',
'GBX',
'PRECHA',
'WHABT',
'PCA',
'AFC',
'TCCC',
'GLAND',
'BAT-3K',
'SYMC',
'UREKA',
'OGC',
'BGT',
'PG',
'CSR',
'NPK',
'CPH',
'PERM',
'L&E',
'2S',
'TMW',
'COLOR',
'THIP',
'TFI',
'ARIP',
'ROCK',
'CHOTI',
'KCAR',
'NINE',
'TEAM',
'SPPT',
'PPS',
'TF',
'MPG',
'YUASA',
'FMT',
'PAP',
'LRH',
'TSC',
'LST',
'CMO',
'PR',
'AHC',
'Q-CON',
'NSI',
'RAM',
'CHUO',
'LANNA',
'MJD',
'THANA',
'SSSC',
'TKT',
'KDH',
'UOBKH',
'FSS',
'IT',
'SSC',
'CITY',
'UP',
'TBSP',
'CSC',
'SPACK',
'NBC',
'ICC',
'SMIT',
'WG',
'FIRE',
'CNS',
'CSP',
'BFIT',
'PPM',
'TMI',
'UPOIC',
'BOL',
'MATCH',
'PHOL',
'SHANG',
'SCG',
'DTC',
'SAWANG',
'QLT',
'TYCN',
'AMC',
'CPL',
'IRC',
'STAR',
'ASIA',
'CHARAN',
'DTCI',
'GFM',
'ALUCON',
'M-CHAI',
'STANLY',
'JUTHA',
'TREIT',
'CPI',
'SAUCE',
'FOCUS',
'JCT',
'OSK',
'MFC',
'SMM',
'WACOAL',
'INOX',
'SUC',
'S&J',
'TSTE',
'PJW',
'KASET',
'MATI',
'HOTPOT']
url = 'http://www.set.or.th/set/historicaltrading.do?symbol={0}&page={1}&language=th&country=TH&type=trading'
priceDate = []
priceList = {}
def getPrice(stock,pageNo):
    htmlFile = urllib.urlopen(url.format(stock,pageNo)).read()
    soup = BeautifulSoup(htmlFile,'html.parser')
    table = soup.find(attrs={'class':'table table-hover table-info'})
    for each in table.find_all('tr'):
            if len(each.findAll('td')) > 4 :
                    td = each.findAll('td')
                    dateStr = td[0].text.split('/')[2]+td[0].text.split('/')[1]+td[0].text.split('/')[0]
                    priceList[dateStr] = float(td[4].text)
                    priceDate.append(dateStr)

def method1(priceList):
    pass

for eachStock in stockList:
    print eachStock
    getPrice(eachStock,0)
    getPrice(eachStock,1)
    getPrice(eachStock,2)


    yesterdayPrice = priceList[priceDate[len(priceDate) - 1]]
    countDayPlus = 0
    countDayMinus = 0
    onHand1 = 0
    onHand2 = 0
    gain1 = 0
    gain2 = 0
    totalGain1 = 0
    totalGain2 = 0
    for each in range(len(priceDate)-1,-1,-1):
        date = priceDate[each]
        price = priceList[date]
        priceChange = priceList[priceDate[each]] - yesterdayPrice
        if priceChange > 0 :
            countDayPlus += 1
            if countDayPlus == 3 :
                if onHand1 == 0:
                    onHand1 = price
    ##                print date,price,"+++++" ,priceChange ," : ",countDayPlus   ," <<<<<<<<M1<<<<<<<<< BUY  " , price
    ##            else:
    ##                print date,price,"+++++" ,priceChange ," : ",countDayPlus   ," <<<M1 BUY" , price

                if onHand2 <> 0:
                    gain2 = price - onHand2
                    totalGain2 += gain2
                    onHand2 = 0
    ##                print date,price,"+++++" ,priceChange ," : " , countDayMinus," <<<<<<<M2<<<<<<<<<< SELL" , price , gain2 , totalGain2
    ##            else:
    ##                print date,price,"+++++" ,priceChange ," : " , countDayMinus," <<<M2 SELL" , price
                    
    ##        else:
    ##            print date,price,"+++++" ,priceChange ," : ",countDayPlus
            countDayMinus = 0
        elif priceChange < 0:
            countDayMinus += 1
            if countDayMinus == 3:
                if onHand1 <> 0:
                    gain1 = price - onHand1
                    totalGain1 += gain1
                    onHand1 = 0
    ##                print date,price,"-----" ,priceChange ," : " , countDayMinus," <<<<<<<M1<<<<<<<<<< SELL" , price , gain1 , totalGain1
    ##            else:
    ##                print date,price,"-----" ,priceChange ," : " , countDayMinus," <<<M1 SELL" , price

                if onHand2 == 0:
                    onHand2 = price
    ##                print date,price,"-----" ,priceChange ," : ",countDayPlus   ," <<<<<<<<M2<<<<<<<<< BUY  " , price
    ##            else:
    ##                print date,price,"-----" ,priceChange ," : ",countDayPlus   ," <<<M2 BUY" , price

    ##        else:
    ##            print date,price,"-----" ,priceChange ," : " , countDayMinus
            countDayPlus = 0
    ##    else :
    ##        print priceDate[each],priceList[priceDate[each]],"====="
        yesterdayPrice = priceList[priceDate[each]]


    print "{0} : M1 = {1} %, M2 = {2} %".format(eachStock,round(totalGain1/price*100,2),round(totalGain2/price*100,2))

